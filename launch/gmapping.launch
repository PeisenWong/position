<launch>
  <!-- Arguments -->
  <arg name="model" default="bot1"/>
  <arg name="set_base_frame" default="base_link"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>
  <arg name="scan_topic" default="scan_filtered"/>

  <!-- Extended Kalman Filter to publish filtered odom -->
 <include file="$(find position)/launch/ekf_local_AMCL.launch"/>

  <!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="bot1_slam_gmapping" output="screen">
    <param name="inverted_laser" value="false"/>
    <param name="base_frame" value="$(arg set_base_frame)"/>
    <param name="odom_frame" value="$(arg set_odom_frame)"/>
    <param name="map_frame"  value="$(arg set_map_frame)"/>
    <param name="map_update_interval" value="0.2"/>
    <param name="maxUrange" value="15.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="minimumScore" value="80"/>
    <param name="srr" value="0.1"/>
    <param name="srt" value="0.2"/> 
    <param name="str" value="0.1"/>
    <param name="stt" value="0.2"/>
    <param name="linearUpdate" value="0.1"/>
    <param name="angularUpdate" value="0.1"/>
    <param name="temporalUpdate" value="0.5"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="800"/>
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>
    <param name="delta" value="0.02"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <param name="maxRange" value="20.0"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>

    <arg
        name="bot" />
        <param
            name="robot_description"
            textfile="$(find turtlebot_v2_urdf)/urdf/turtlebot_v2_urdf.urdf" />
        <node
            name="robot_state_publisher"
            pkg="robot_state_publisher"
            type="robot_state_publisher"
            output = "log" />

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find position)/rviz/gmapping.rviz"/>
    <node name="rviz_laser" pkg="rviz" type="rviz" args="-d $(find rplidar_ros)/rviz/rplidar.rviz" />
    <node pkg="position" type="robot" name="robot" />

    <node name="rplidarNode"  pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <param name="serial_port"         type="string" value="/dev/rplidar"/>
        <param name="serial_baudrate"     type="int"    value="256000"/><!--A1/A2 -->
        <param name="frame_id"            type="string" value="base_scan"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
    </node>

    <!-- Filter out laser scan range -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <rosparam command="load" file="$(find position)/param/angle_filter_angle.yaml" />
      <param name="tf_message_filter_target_frame" value="base_scan"/>
    </node>
</launch>
